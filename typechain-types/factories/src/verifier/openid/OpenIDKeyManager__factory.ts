/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  OpenIDKeyManager,
  OpenIDKeyManagerInterface,
} from "../../../../src/verifier/openid/OpenIDKeyManager";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "_key",
        type: "bytes32",
      },
    ],
    name: "DeleteOpenIdPublicKey",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "_key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_publicKey",
        type: "bytes",
      },
    ],
    name: "UpdateOpenIDPublicKey",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_keys",
        type: "bytes32[]",
      },
      {
        internalType: "bytes[]",
        name: "_publicKeys",
        type: "bytes[]",
      },
    ],
    name: "batchUpdateOpenIDPublicKey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_key",
        type: "bytes32",
      },
    ],
    name: "deleteOpenIDPublicKey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_key",
        type: "bytes32",
      },
    ],
    name: "getOpenIDPublicKey",
    outputs: [
      {
        internalType: "bytes",
        name: "publicKey",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_key",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_publicKey",
        type: "bytes",
      },
    ],
    name: "updateOpenIDPublicKey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6110b58061010d6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100c4578063b7854534146100e2578063f22b68db14610112578063f2fde38b1461012e5761007d565b80633ed83b6414610082578063710a5b3c1461009e578063715018a6146100ba575b600080fd5b61009c600480360381019061009791906106ed565b61014a565b005b6100b860048036038101906100b391906107f9565b6101b5565b005b6100c26102db565b005b6100cc6102ef565b6040516100d991906108bb565b60405180910390f35b6100fc60048036038101906100f791906108d6565b610318565b6040516101099190610993565b60405180910390f35b61012c600480360381019061012791906108d6565b6103bd565b005b610148600480360381019061014391906109e1565b61041e565b005b6101526104a1565b8181600160008681526020019081526020016000209182610174929190610c5e565b507f09c7228183e89663fa47ccbf317d3ac5e228a62848b5c29017eb05cb1a7224bc8383836040516101a893929190610d79565b60405180910390a1505050565b6101bd6104a1565b600084849050905082829050811461020a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020190610e2e565b60405180910390fd5b60005b818110156102d357600086868381811061022a57610229610e4e565b5b90506020020135905036600086868581811061024957610248610e4e565b5b905060200281019061025b9190610e8c565b915091508181600160008681526020019081526020016000209182610281929190610c5e565b507f09c7228183e89663fa47ccbf317d3ac5e228a62848b5c29017eb05cb1a7224bc8383836040516102b593929190610d79565b60405180910390a150505080806102cb90610f1e565b91505061020d565b505050505050565b6102e36104a1565b6102ed600061051f565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060016000838152602001908152602001600020805461033890610a77565b80601f016020809104026020016040519081016040528092919081815260200182805461036490610a77565b80156103b15780601f10610386576101008083540402835291602001916103b1565b820191906000526020600020905b81548152906001019060200180831161039457829003601f168201915b50505050509050919050565b6103c56104a1565b6001600082815260200190815260200160002060006103e491906105eb565b7f2dcad5593eade66ba317c839f2c7cd4b40bf9348055df767870cc43eb955e99f816040516104139190610f66565b60405180910390a150565b6104266104a1565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610495576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048c90610ff3565b60405180910390fd5b61049e8161051f565b50565b6104a96105e3565b73ffffffffffffffffffffffffffffffffffffffff166104c76102ef565b73ffffffffffffffffffffffffffffffffffffffff161461051d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105149061105f565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b5080546105f790610a77565b6000825580601f106106095750610628565b601f016020900490600052602060002090810190610627919061062b565b5b50565b5b8082111561064457600081600090555060010161062c565b5090565b600080fd5b600080fd5b6000819050919050565b61066581610652565b811461067057600080fd5b50565b6000813590506106828161065c565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126106ad576106ac610688565b5b8235905067ffffffffffffffff8111156106ca576106c961068d565b5b6020830191508360018202830111156106e6576106e5610692565b5b9250929050565b60008060006040848603121561070657610705610648565b5b600061071486828701610673565b935050602084013567ffffffffffffffff8111156107355761073461064d565b5b61074186828701610697565b92509250509250925092565b60008083601f84011261076357610762610688565b5b8235905067ffffffffffffffff8111156107805761077f61068d565b5b60208301915083602082028301111561079c5761079b610692565b5b9250929050565b60008083601f8401126107b9576107b8610688565b5b8235905067ffffffffffffffff8111156107d6576107d561068d565b5b6020830191508360208202830111156107f2576107f1610692565b5b9250929050565b6000806000806040858703121561081357610812610648565b5b600085013567ffffffffffffffff8111156108315761083061064d565b5b61083d8782880161074d565b9450945050602085013567ffffffffffffffff8111156108605761085f61064d565b5b61086c878288016107a3565b925092505092959194509250565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108a58261087a565b9050919050565b6108b58161089a565b82525050565b60006020820190506108d060008301846108ac565b92915050565b6000602082840312156108ec576108eb610648565b5b60006108fa84828501610673565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561093d578082015181840152602081019050610922565b60008484015250505050565b6000601f19601f8301169050919050565b600061096582610903565b61096f818561090e565b935061097f81856020860161091f565b61098881610949565b840191505092915050565b600060208201905081810360008301526109ad818461095a565b905092915050565b6109be8161089a565b81146109c957600080fd5b50565b6000813590506109db816109b5565b92915050565b6000602082840312156109f7576109f6610648565b5b6000610a05848285016109cc565b91505092915050565b600082905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610a8f57607f821691505b602082108103610aa257610aa1610a48565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610b0a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610acd565b610b148683610acd565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000610b5b610b56610b5184610b2c565b610b36565b610b2c565b9050919050565b6000819050919050565b610b7583610b40565b610b89610b8182610b62565b848454610ada565b825550505050565b600090565b610b9e610b91565b610ba9818484610b6c565b505050565b5b81811015610bcd57610bc2600082610b96565b600181019050610baf565b5050565b601f821115610c1257610be381610aa8565b610bec84610abd565b81016020851015610bfb578190505b610c0f610c0785610abd565b830182610bae565b50505b505050565b600082821c905092915050565b6000610c3560001984600802610c17565b1980831691505092915050565b6000610c4e8383610c24565b9150826002028217905092915050565b610c688383610a0e565b67ffffffffffffffff811115610c8157610c80610a19565b5b610c8b8254610a77565b610c96828285610bd1565b6000601f831160018114610cc55760008415610cb3578287013590505b610cbd8582610c42565b865550610d25565b601f198416610cd386610aa8565b60005b82811015610cfb57848901358255600182019150602085019450602081019050610cd6565b86831015610d185784890135610d14601f891682610c24565b8355505b6001600288020188555050505b50505050505050565b610d3781610652565b82525050565b82818337600083830152505050565b6000610d58838561090e565b9350610d65838584610d3d565b610d6e83610949565b840190509392505050565b6000604082019050610d8e6000830186610d2e565b8181036020830152610da1818486610d4c565b9050949350505050565b600082825260208201905092915050565b7f62617463685570646174654f70656e49445075626c69634b65793a20494e564160008201527f4c49445f4c454e47544800000000000000000000000000000000000000000000602082015250565b6000610e18602a83610dab565b9150610e2382610dbc565b604082019050919050565b60006020820190508181036000830152610e4781610e0b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112610ea957610ea8610e7d565b5b80840192508235915067ffffffffffffffff821115610ecb57610eca610e82565b5b602083019250600182023603831315610ee757610ee6610e87565b5b509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f2982610b2c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610f5b57610f5a610eef565b5b600182019050919050565b6000602082019050610f7b6000830184610d2e565b92915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610fdd602683610dab565b9150610fe882610f81565b604082019050919050565b6000602082019050818103600083015261100c81610fd0565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611049602083610dab565b915061105482611013565b602082019050919050565b600060208201905081810360008301526110788161103c565b905091905056fea2646970667358221220fcdca9942a64c5021cfcdaea2759fcfc3563150f1bd34ca721122ca61c606d7e64736f6c63430008130033";

type OpenIDKeyManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OpenIDKeyManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OpenIDKeyManager__factory extends ContractFactory {
  constructor(...args: OpenIDKeyManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      OpenIDKeyManager & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): OpenIDKeyManager__factory {
    return super.connect(runner) as OpenIDKeyManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OpenIDKeyManagerInterface {
    return new Interface(_abi) as OpenIDKeyManagerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): OpenIDKeyManager {
    return new Contract(address, _abi, runner) as unknown as OpenIDKeyManager;
  }
}
