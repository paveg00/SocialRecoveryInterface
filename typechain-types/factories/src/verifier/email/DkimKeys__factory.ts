/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  DkimKeys,
  DkimKeysInterface,
} from "../../../../src/verifier/email/DkimKeys";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "emailServer",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "oldKey",
        type: "bytes",
      },
    ],
    name: "DeleteDKIMKey",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "emailServer",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
    ],
    name: "UpdateDKIMKey",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_emailServers",
        type: "bytes32[]",
      },
      {
        internalType: "bytes[]",
        name: "_keys",
        type: "bytes[]",
      },
    ],
    name: "batchUpdateDKIMKeys",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_emailServer",
        type: "bytes32",
      },
    ],
    name: "deleteDKIMKey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_emailServer",
        type: "bytes32",
      },
    ],
    name: "getDKIMKey",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_emailServer",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
    ],
    name: "updateDKIMKey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class DkimKeys__factory {
  static readonly abi = _abi;
  static createInterface(): DkimKeysInterface {
    return new Interface(_abi) as DkimKeysInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DkimKeys {
    return new Contract(address, _abi, runner) as unknown as DkimKeys;
  }
}
